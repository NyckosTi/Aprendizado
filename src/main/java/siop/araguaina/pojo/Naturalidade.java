package siop.araguaina.pojo;
// Generated 21/08/2015 15:52:52 by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Naturalidade generated by hbm2java
 */
@Entity
@Table(name="naturalidade"
    ,catalog="ocorrencia"
)
public class Naturalidade  implements java.io.Serializable {


     private NaturalidadeId id;
     private Cidade cidade;

    public Naturalidade() {
    }

    public Naturalidade(NaturalidadeId id, Cidade cidade) {
       this.id = id;
       this.cidade = cidade;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false) ), 
        @AttributeOverride(name="cidadeId", column=@Column(name="cidade_id", nullable=false) ), 
        @AttributeOverride(name="cidadeEstadoId", column=@Column(name="cidade_estado_id", nullable=false) ), 
        @AttributeOverride(name="cidadeEstadoPaisId", column=@Column(name="cidade_estado_pais_id", nullable=false) ) } )
    public NaturalidadeId getId() {
        return this.id;
    }
    
    public void setId(NaturalidadeId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="cidade_id", referencedColumnName="id", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="cidade_estado_id", referencedColumnName="estado_id", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="cidade_estado_pais_id", referencedColumnName="estado_pais_id", nullable=false, insertable=false, updatable=false) } )
    public Cidade getCidade() {
        return this.cidade;
    }
    
    public void setCidade(Cidade cidade) {
        this.cidade = cidade;
    }




}


